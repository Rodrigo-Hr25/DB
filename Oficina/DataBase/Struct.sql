-- use master;
-- DROP DATABASE IF EXISTS OFICINA;
-- CREATE DATABASE OFICINA;
-- GO

USE OFICINA;
GO

CREATE TABLE CLIENTES (
    clienteID VARCHAR(50) NOT NULL,
    Nome VARCHAR(50) NOT NULL,
    Telefone VARCHAR(13) NOT NULL,
    Email VARCHAR(50) NOT NULL UNIQUE,
    Morada VARCHAR(50) NOT NULL,

    constraint PK_CLIENTES primary key (clienteID),
    constraint CK_CLIENTES_EMAIL check (Email like '%@%.%'),
    constraint CK_CLIENTES_NOME unique (Nome)
);
GO

CREATE TABLE FUNCIONARIOS (
    FuncionarioID VARCHAR(50) NOT NULL,
    Nome VARCHAR(50) NOT NULL,
    Telefone VARCHAR(9) NOT NULL,
    Email VARCHAR(50) NOT NULL UNIQUE,
    Morada VARCHAR(50) NOT NULL,
    Cargo VARCHAR(50) NOT NULL,
    Salario VARCHAR(10) NOT NULL,

    constraint PK_FUNCIONARIOS primary key (FuncionarioID),
    constraint CK_FUNCIONARIOS_EMAIL check (Email like '%@%.%'),
	constraint CK_FUNCIONARIOS_NOME unique (Nome)
);
GO

CREATE TABLE VEICULOS (
    VeiculoID VARCHAR(50) NOT NULL,
    ClienteID VARCHAR(50) NOT NULL,
    Marca VARCHAR(50) NOT NULL,
    VIN VARCHAR(17) NOT NULL,
    TipoVeiculo VARCHAR(50) NOT NULL,
    Modelo VARCHAR(50) NOT NULL,
    DataVeiculo VARCHAR(15) NOT NULL,
    Placa VARCHAR(8) NOT NULL,


    CONSTRAINT FK_VEICULOS_CLIENTES FOREIGN KEY (ClienteID) REFERENCES CLIENTES(ClienteID) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT PK_VEICULOS PRIMARY KEY (VeiculoID),
    CONSTRAINT Ck_VEICULO_PLACA CHECK (Placa like '__-__-__' OR Placa like '__ __ __')
);
GO

CREATE TABLE TIPOS_SERVICOS (
    TipoServicoID VARCHAR(50) NOT NULL,
    NomeServico VARCHAR(50) NOT NULL UNIQUE,
    Preco VARCHAR(10) NOT NULL,

    constraint PK_TIPOS_SERVICOS primary key (TipoServicoID)
);
GO

CREATE TABLE SERVICOS (
    ServicoID VARCHAR(50) NOT NULL,
    VeiculoID VARCHAR(50) NOT NULL,
    TipoServiçoID VARCHAR(50) NOT NULL,
    DataServico VARCHAR(15) NOT NULL,
    Descricao VARCHAR(50) NOT NULL,
    Preco VARCHAR(10) NOT NULL,

    CONSTRAINT FK_SERVICOS_VEICULOS FOREIGN KEY (VeiculoID) REFERENCES VEICULOS(VeiculoID) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FK_SERVICOS_TIPOS_SERVICOS FOREIGN KEY (TipoServiçoID) REFERENCES TIPOS_SERVICOS(TipoServicoID) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT PK_SERVICOS PRIMARY KEY (ServicoID)
);
GO

CREATE TABLE SERVICOS_FUNCIONARIOS (
    ServicoID VARCHAR(50) NOT NULL,
    FuncionarioID VARCHAR(50) NOT NULL,

    CONSTRAINT FK_SERVICOS_FUNCIONARIOS_SERVICOS FOREIGN KEY (ServicoID) REFERENCES SERVICOS(ServicoID) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FK_SERVICOS_FUNCIONARIOS_FUNCIONARIOS FOREIGN KEY (FuncionarioID) REFERENCES FUNCIONARIOS(FuncionarioID) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT PK_SERVICOS_FUNCIONARIOS PRIMARY KEY (ServicoID, FuncionarioID)

);
GO

CREATE TABLE PECAS (
    PecaID VARCHAR(50) NOT NULL,
    NomePeca VARCHAR(50) NOT NULL,
    Preco VARCHAR(10) NOT NULL,

    CONSTRAINT PK_PECAS PRIMARY KEY (PecaID)
);
GO

CREATE TABLE PECAS_SERVICOS (
    PecaID VARCHAR(50) NOT NULL,
    ServicoID VARCHAR(50) NOT NULL,

    CONSTRAINT FK_PECAS_SERVICOS_PECAS FOREIGN KEY (PecaID) REFERENCES PECAS(PecaID) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FK_PECAS_SERVICOS_SERVICOS FOREIGN KEY (ServicoID) REFERENCES SERVICOS(ServicoID) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT PK_PECAS_SERVICOS PRIMARY KEY (PecaID, ServicoID)
);
GO

CREATE TABLE PECAS_VEICULOS (
    PecaID VARCHAR(50) NOT NULL,
    VeiculoID VARCHAR(50) NOT NULL,

    CONSTRAINT FK_PECAS_VEICULOS_PECAS FOREIGN KEY (PecaID) REFERENCES PECAS(PecaID) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FK_PECAS_VEICULOS_VEICULOS FOREIGN KEY (VeiculoID) REFERENCES VEICULOS(VeiculoID) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT PK_PECAS_VEICULOS PRIMARY KEY (PecaID, VeiculoID)
);
GO

CREATE TABLE ENCOMENDAS (
    EncomendaID VARCHAR(50) NOT NULL,
    PecaID VARCHAR(50) NOT NULL,
    ServicoID VARCHAR(50) NOT NULL,
    DataEncomenda VARCHAR(15) NOT NULL,
    Quantidade VARCHAR(10) NOT NULL,
    PrecoTotal VARCHAR(10) NOT NULL,

    CONSTRAINT FK_ENCOMENDAS_PECAS FOREIGN KEY (PecaID) REFERENCES PECAS(PecaID) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FK_ENCOMENDAS_SERVICOS FOREIGN KEY (ServicoID) REFERENCES SERVICOS(ServicoID) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT PK_ENCOMENDAS PRIMARY KEY (EncomendaID)
);
GO